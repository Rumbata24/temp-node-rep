* NodeJS *
- Environment to run JS outside of the Browser

Created 2009, and it's Build on Chrome's V8 JS Engine

* Browser vs Node.JS *

Browser                        Node.JS
- DOM                          - No DOM
- Windows                      - No Windows
- Interactive Apps             - Server Side Apps
- No Filesystem                - Filesystem
- Fragmentation                - Versions
- ES6 Modules                  - CommonJS

REPL - Read Eval Print loop - playing around
CLI - use for everything else

* Global variables in NodeJS *

Globals - NO WINDOW !!!

__dirname - path to current directory
__filename - file name
require - function to use modules (CommonJS)
module - info about current module (file)
process - info about env where the program is being executed

- More info in the docs - nodejs.org...

* Modules *

In commonJS, every file is module (by default)
Modules - are encapsulated Code (only share minimum)

Breaking it into different files 
const names = require("./names");
module.exports = { john, peter };

* Built-in Modules *

- OS
- PATH
- FS
- HTTP


* NPM *

npm - global command, comes with node
npm --version - shows the version

local dependency - use it only in this particular project
npm i <packageName>

global dependency - use it in any project
npm install -g <packageName>
sudo npm install -g <packageName> (mac)

package.json - manifest file (stores important info about project/package)
manual approach (create package.json in the root, create properties etc)
npm init (step by step, press enter to skip)
npm init -y (everything default)

